---
import { Image } from "@astrojs/image/components";
import { Episode } from "@podverse/podcast-feed-parser";
import BackButton from "../../components/BackButton.astro";
import ProseTitle from "../../components/ProseTitle.astro";
import Layout from "../../layouts/Layout.astro";
import Markdown from "../../libs/markdown/Markdown.astro";
import TurndownService from "turndown";

import {
  buildTitle,
  optimizeMetadescription,
  getPodcastFeed,
  getLegacySlug,
  getSlug,
  getSpreakerId,
  getSeason,
  formatDate,
  formatDuration,
  prepareTitle,
} from "../../utils";
import LinkPreview from "../../components/LinkPreview.astro";
import NormalLinkPreview from "../../components/NormalLinkPreview.astro";
import Menu from "../../components/Menu.astro";

const turndownService = new TurndownService();

export async function getStaticPaths() {
  const { episodes } = await getPodcastFeed(
    "https://www.spreaker.com/show/4173756/episodes/feed"
  );
  return episodes.reduce(
    (acc: { params: { slug: string; props: Episode } }[], e: Episode) => {
      return [
        ...acc,
        {
          params: { slug: getLegacySlug(e) },
          props: { e },
        },
        {
          params: { slug: getSlug(e) },
          props: { e },
        },
      ];
    },
    []
  );
}

const { e } = Astro.props;
const summary = turndownService.turndown(e.summary).split("\\").join("").split("---")[0];
---

<Layout
  seo={{
    canonical: `/episodes/${getSlug(e)}`,
    title: buildTitle(prepareTitle(e.title)[1]),
    description: optimizeMetadescription(e.description),
    image: e.imageURL,
  }}
>

  <main class="relative lg:min-h-screen flex flex-col">
    <Menu />
    <BackButton />
    <div
      class="max-w-3xl 4xl:max-w-4xl mx-auto w-full p-8 flex-grow space-y-5 break-words lg:mt-6"
    >
      <header class="flex flex-col 3xl:-ml-24 3xl:-mr-24">
        <div
          class="md:grid w-full grid-cols-[max(250px),_1fr] flex flex-col gap-4 break-words"
        >
          <Image
            alt="copertina episodio"
            src={e.imageURL}
            width={250}
            height={250}
            class="rounded-lg"
          />

          <div class="flex flex-col items-start">
            <time
              datetime="2022-02-17T00:00:00.000Z"
              class="text-sm leading-4 text-yellow-500 uppercase"
            >
              {formatDate(e.pubDate)}
            </time>
            <h1 class="mt-2 text-4xl font-bold text-slate-900">
              {prepareTitle(e.title)[1]}
            </h1>

            <div
              id="episode-4-title"
              class="mt-2 text-lg font-bold text-slate-900 group-hover:text-slate-100"
            >
              <span
                class="bg-slate-800 inline-block text-white font-mono rounded font-normal text-sm px-2 mr-2 py-1 group-hover:hidden transition-all"
              >
                Stagione {getSeason(e)}</span
              >
              <span
                class="bg-slate-800 inline-block text-white font-mono rounded font-normal text-sm px-2 mr-2 py-1 group-hover:hidden transition-all"
              >
                Episodio {prepareTitle(e.title)[0]}</span
              >
              <span
                class="bg-slate-800 text-white inline-block font-mono rounded font-normal text-sm px-2 mr-2 py-1 group-hover:hidden transition-all"
              >
                Durata {formatDuration(e.duration)}</span
              >
            </div>
          </div>
        </div>
      </header>

      {
        summary.split(/(?=##)/g).map((paragraph) => {
          return (
            <section class="leading-8 text-slate-700">
              <Markdown
                content={paragraph}
                components={{
                  Heading: ProseTitle,
                  // TODO: re enable after leaving netlify
                  // downloading all link infos make the build slow
                  // and netlify reaches the timeout limit. :(
                  // find a better way maybe cashing the http calls
                  /* ...(paragraph.startsWith("## Paese dei balocchi" ) */
                  /*   ? { Link: LinkPreview } */
                  /*   : { Link: NormalLinkPreview }), */
                }}
                sanitize={{
                  allowElements: ["h1", "h2", "h3", "ul", "li"],
                  allowComponents: true,
                }}
              />
            </section>
          );
        })
      }
    </div>
    <div
      class="sticky bottom-0 -ml-[99px] lg:-ml-[129px] right-0 h-[100px] lg:h-[130px] z-20 bg-white overflow-hidden shadow-lg"
    >
      <iframe
        class="top-0 bottom-0 w-full h-[100px] lg:h-[130px]"
        src={`https://widget.spreaker.com/player?episode_id=${getSpreakerId(
          e
        )}&theme=light&playlist=false&playlist-continuous=false&autoplay=false&live-autoplay=false&chapters-image=true&episode_image_position=left&hide-logo=true&hide-likes=false&hide-comments=false&hide-sharing=false&hide-download=true`}
      ></iframe>
    </div>
  </main>
</Layout>
